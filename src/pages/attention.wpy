<template>
  <view>
    <tab @bindChange.user="change"/>
    <view>
      <view wx:if="{{tab2.selectedId === 2}}">
        <toAttentionList :attention.sync="toAttention"></toAttentionList>
      </view>
      <view wx:if="{{tab2.selectedId === 1}}">
       <selfAttentionList :attention.sync="selfAttention"></selfAttentionList>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Tab from '../components/kaiui/tab/index'
  import AttentionList from '../components/attention/attention-list'
  import Util from '../util/util'

  export default class extends wepy.page {
    config = {
      navigationBarTitleText: '我的关注',
    }

    data = {
      tab2: {
        list: [{id: 1, title: '谁关注我'}, {id: 2, title: '我关注谁'}],
        selectedId: 2,
        class: 'tab-success'
      },
      toAttention: {
        list:[]
      },
      selfAttention: {
        list: []
      },
      toAttentionQuery: {
        pageIndex: 1,
        pageSize: 20,
        attentionOpenId: "true"
      },
      selfAttentionQuery: {
        pageIndex: 1,
        pageSize: 20,
        toAttentionOpenId: "true"
      }
    }

    loadToAttentionList() {
      Util.commonRequest(this.$parent.globalData.backUrl + "attention/list", this.toAttentionQuery, true, this.$parent)
        .then(res => {
          wx.hideLoading();
          console.log(res)
          this.toAttention.list = res;
          this.$apply();
        })
        .catch(error=> Util.processErrorMessage(error, false));
    }

    loadSelfAttentionList() {
      Util.commonRequest(this.$parent.globalData.backUrl + "attention/list", this.selfAttentionQuery, true, this.$parent)
        .then(res => {
          wx.hideLoading();
          console.log(res);
          this.selfAttention.list = res;
          this.$apply();
        })
        .catch(error=> Util.processErrorMessage(error, false));
    }

    methods = {
      change(res) {
        this.tab2.selectedId = res;
        this.$apply()
        if (res === 2) {
          this.loadToAttentionList();
        }else {
          this.loadSelfAttentionList();
        }
      }
    }

    components = {
      tab: Tab,
      toAttentionList: AttentionList,
      selfAttentionList: AttentionList
    }

    onLoad() {
      const { tab2 } = this
      this.$invoke('tab', 'doInitTabData', tab2)
      this.loadToAttentionList();
    }

  }


</script>

<style lang="less">

</style>
