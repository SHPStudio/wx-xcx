<style lang="less">
</style>
<template>
    <view class="container">
        <!--<repeat for="{{dataList}}" index="index" item="item" key="key">-->
          <!--<single></single>-->
        <!--</repeat>-->
      <block wx:for-items="{{dataList}}" wx:for-index="index" wx:for-item="item" wx:key="key">
        <single></single>
      </block>

    </view>
    <zanDialog/>
</template>

<script>
  import wepy from 'wepy'
  import Single from '../components/single/single'
  import zanDialog from '../components/dialog/zan-dialog'
  import UserInfoMixin from '../mixins/user-info'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页',
      enablePullDownRefresh: true,
    }

    components = {
      single: Single,
      zanDialog,
    }

    data = {
        dataList: [
          {key: "1",name: "11"},
          {key: "2",name: "12"},
          {key: "3",name: "13"}
        ],
        userInfo: {
          code: {},
          user: {}
        }
    }

    methods = {
    }

    mixins= [UserInfoMixin]

    getUserInfo() {
      this.$invoke('zanDialog', 'showZanDialog', {
        title: '认证',
        content: '请先认证信息',
        buttons:[
          {
            text: '取消',
            type: 'cancel'
          },
          {
            text: '授权',
            type: 'xxxx',
            opentype: "getUserInfo"
          }
        ]
      }).then((e) => {
        this.userInfo.user = e.detail.userInfo;
        this.setToStorage(this.userInfoStorageKey, e.detail.userInfo)
      }).catch(() => {
        console.log('=== dialog ===', 'type: cancel')
      })
    }
    getUserSetting() {
      var _this = this;
      wx.getSetting({
        success(res) {
          let authSetting = res.authSetting;
          if (authSetting["scope.userInfo"]) {
            _this.getUserInfoSlience()
          }else {
            _this.getUserInfo()
          }
        }
      })
    }

    getUserInfoSlience() {
      var _this = this;
      wx.getUserInfo({
        success(res) {
          console.log("静默获取用户信息:" + JSON.stringify(res.userInfo))
          _this.setToStorage(_this.userInfoStorageKey, res.userInfo);
        }
      })
    }

    onPullDownRefresh() {
      console.log("xiala")
      setTimeout(()=> {
        this.dataList.unshift({key: "4",name: "13"});
        wx.stopPullDownRefresh();
        this.$apply();
      },1000)

    }

    onReachBottom() {
      console.log("处理")
      wx.showLoading({title:"玩儿命加载中"})
      setTimeout(()=> {
        this.dataList.push({key: "4",name: "13"},{key: "4",name: "13"},{key: "4",name: "13"},{key: "4",name: "13"});
        wx.hideLoading();
        this.$apply();
      },1000)
    }

    onLoad() {
      var _this = this;
      wx.login({
        success(res) {
          console.log(res)
        }
      })
      // 检查缓存中是否存在
      _this.getFromStorage(_this.userInfoStorageKey,(res) => {
        console.log(res)
        if (res == null) {
          console.log("未授权开始执行授权处理")
          // 获取授权设置
          _this.getUserSetting()
        }else {
          console.log("已有授权信息")
        }
      });
    }
  }
</script>
