<!--首页-->
<style lang="less">
  .user-card{
    margin-top: 3vh;
    width: 90%;
    height: 90vh;
    box-shadow:0rpx 0rpx 10px rgba(0, 0, 0, 0.3);
    border-radius: 0 0 100rpx 100rpx;
    position: relative;
    left: 0;
  }
  .user-card-img{
    width: 100%;
    height: 80%;
  }
  .user-card-head{
    width: 20vw;
    height: 20vw;
    border-radius: 50%;
    position: absolute;
    left:65rpx;
  }
  .user-card-text{
    position:absolute;
    bottom:5vh;
    right:10vw;
    width:50vw;
    height:10vh;
    font-weight:bold;
    color:#464c5b;
    .card-text-job{
      font-size:25rpx;
      margin-top:10px;
      color:#657180;
      font-weight:lighter;
    }
  }

  .user-card-img-text{
    color:#f5f7f9;
    position:absolute;
    bottom:20vh;
    left:5vw;
    width:50vw;
    height:10vh;
    font-weight:bold;
    .card-text-job{
      margin-top:10px;
      font-weight:lighter;
    }
  }
  .user-card-icon{
    width:14px;
    height:14px;
  }
  .show-follow-icon{
    position: absolute;
    display: block;
    width: 100px;
    height: 100px;
    border-radius: 100%;
    box-shadow: 0 0 5px rgba(0,0,0,0.5);
    background-color: white;
    image{
    }
  }
  .hide-icon{
    display: none;
  }
</style>
<template>
    <view class="container" >
        <!--列表-->
        <repeat for="{{dataList}}" index="index" item="item" key="key">
          <!--列表单条记录-->
          <single :item="item"></single>
        </repeat>
     <!-- <scroll-view class="user-card"  bindtouchend="touchEnd"
                   bindtouchstart="touchStart" bindtouchmove="touchMove">
          <image src="../image/rpg.jpg" class="user-card-img"></image>
          <view>
            <image src="../image/rpg.jpg" class="user-card-head"></image>
            <view class="user-card-img-text">
              <view>
                <image src="../image/sex/boy.png" class="user-card-icon"></image>
                <text style="margin-left: 10px;">卫斯理</text>
                <text style="font-size: 30rpx;margin-left: 20rpx;">24</text>
                <text style="font-size: 30rpx;margin-left: 20rpx;">水瓶座</text>
              </view>
            </view>
            <view class="user-card-text">
              <view>
                <text style="">卫斯理</text>
                <text style="font-size: 30rpx;margin-left: 20rpx;">24</text>
                <text style="font-size: 30rpx;margin-left: 20rpx;">水瓶座</text>
              </view>
              <view class="card-text-job">
                <image src="../image/icon/job.png" class="user-card-icon"></image>
                IT工程师 平台生态-商家运营</view>
            </view>
          </view>
        </scroll-view>
      <view class="show-follow-icon">
        <image src="../image/icon/心.png"></image>
      </view>-->
      <loadmore :more.sync="more"></loadmore>
    </view>
    <loading></loading>
</template>

<script>
  import wepy from 'wepy'
  import Single from '../components/single/single'
  import zanDialog from '../components/dialog/zan-dialog'
  import LoginUtil from '../util/login-util'
  import Util from '../util/util'
  import LoadMore from '../components/kaiui/loadmore/index'
  import Loading from '../components/loading/loading2'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页',
      enablePullDownRefresh: true,
      onReachBottomDistance: 1
    }

    components = {
      single: Single,
      zanDialog,
      loadmore: LoadMore,
      loading: Loading
    }

    data = {
        dataList: [
        ],
        userInfo: {
          code: {},
          user: {}
        },
        noData: false,
        load:true,
        isError: false,
        more: {
          type: true,
          loading: '加载中',
          loaded: '我们是有底线的'
        },
      left:"0",
      startX:'',
      endX:'',
      size: 5
    };

    methods = {
      /***
       * 判断用户滑动
       * 左滑还是右滑
       */
      getTouchData (endX, endY, startX, startY) {
        let turn = "";
        if (endX - startX > 50 && Math.abs(endY - startY) < 50) {      //右滑
          turn = "right";
        } else if (endX - startX < -50 && Math.abs(endY - startY) < 50) {   //左滑
          turn = "left";
        }
        return turn;
      }
    };

    /**
     * 下拉刷新触发方法
     */
    onPullDownRefresh() {
      console.log("下拉刷新")
      Util.commonRequest(this.$parent.globalData.backUrl + "user/randomQueryUserInfo?size=" + this.size,null, false, this.$parent)
        .then(res => this.topLoadData(res)).catch(error => {
        wx.stopPullDownRefresh();
        Util.processErrorMessage(error, this, false);
      })
    }

    /**
     * 上拉刷新触发方法
     */
    onReachBottom() {
      console.log("上拉刷新")
      Util.commonRequest(this.$parent.globalData.backUrl + "user/randomQueryUserInfo?size=" + this.size,null, false, this.$parent)
        .then(res => this.downLoadData(res)).catch(error => Util.processErrorMessage(error, this, false))
    }

    /**
     * 处理请求过来的列表数据
     * @param data 来自服务器的列表数据
     */
    loadData(data) {
      this.isError = false;
      this.dataList = this.processData(data);
      this.$apply();
    }

    /**
     * 对列表数据进行可视化处理
     * @param dataList
     * @returns {*}
     */
    processData(dataList) {
      let _this = this;
      console.log("processData", dataList);
      let result = dataList.map(item => {
        return {
          openId: item.openId,
          photos: _this.processImageUrl(item.photos),
          department: item.department,
          jiguan: `${item.province} ${item.city}`,
          name: item.name,
          birthday: item.birthday.substring(2,4),
          sex: item.sex,
          constellation: _this.$parent.globalData.constellationList[item.constellation],
          path: `/pages/user_info?openId=${item.openId}`
        }
      });
      console.log("processData result", result);
      return result;
    }

    /**
     * 处理图片链接
     * 因为服务器返回的图片集合是Json字符串 所以需要把字符串转换为数组 并且拼接好图片服务器地址
     * @param photoListStr
     * @returns {*}
     */
    processImageUrl(photoListStr) {
      let imageUrl = this.$parent.globalData.imageUrl;
      let result = JSON.parse(photoListStr).map(item => `${imageUrl}${item}`)
      return result;
    }

    /**
     * 处理上拉刷新的请求数据
     * 上拉刷新需要把数据放到列表的前面
     * @param data
     */
    topLoadData(data) {
      if (!data || data.length == 0) {
        wx.showToast({title:"帅哥美女库存已空，来推荐几个吧", icon: "none"})
        wx.stopPullDownRefresh();
        return;
      }
      console.log("上拉刷新请求到的数据：", data);
      this.processData(data).forEach(e => {
        this.dataList.unshift(e);
      });
      this.$apply();
    }

    /**
     * 处理下拉刷新的请求数据
     * @param data
     */
    downLoadData(data) {
      console.log("下拉刷新请求到的数据：", data);
      this.processData(data).forEach(e => {
        this.dataList.push(e)
      });
      this.$apply();
    }

    onShow() {
      if (this.isError) {
        this.initLoad();
      }
    }

    initLoad() {
      // wx.hideTabBar();
      // this.$parent.showCustomLoading("加载中...");
      this.$invoke("loading", "showLoading");
      // 初始处理链
      // 1.先登录获取三方登录态并保存到本地缓存中
      // 2.登录后开始获取用户信息 其实主要是第一次获取用户信息授权用 然后保存到本地缓存
      // 3.然后请求第一页数据
      // 最后对上述处理中出现异常做异常处理 主要还是处理服务器连接失败问题
        Util.commonRequest(this.$parent.globalData.backUrl + "user/randomQueryUserInfo?size=" + this.size,null, false, this.$parent)
          .then(res => {
          console.log("成功获得信息:", res)
          this.$invoke("loading", "hideMask");
          this.loadData(res)
        })
        .catch(error => {
          this.isError = true;
          console.log(error);
          Util.processErrorMessage(error, this);
        })
    }


    onLoad() {
      this.initLoad()
    }
    touchStart (e) {
      console.log("开始触摸移动" + e.changedTouches[0].clientX)
      this.startX = e.changedTouches[0].clientX;
      console.log(this.startX)
    }
    // 触摸移动事件
    touchMove(e) {
      console.log("触摸移动ing" + e.changedTouches[0].clientX)
    }
    // 触摸结束事件
    touchEnd (e) {
      let endX = e.changedTouches[0].clientX;
      console.log(this.startX,endX);
     if(endX - this.startX > 50){
        console.log("向右滑动")
     } else if (endX - this.startX < -50){
       console.log("向左滑动")
     }
    }
  }
</script>
