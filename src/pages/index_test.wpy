<!--首页-->
<style lang="less">
</style>
<template>
    <view class="container">
        <!--列表-->
        <repeat for="{{dataList}}" index="index" item="item" key="key">
          <!--列表单条记录-->
          <single :item="item"></single>
        </repeat>
        <loadmore :more.sync="more"></loadmore>
    </view>
  <loading></loading>
</template>

<script>
  import wepy from 'wepy'
  import Single from '../components/single/single'
  import zanDialog from '../components/dialog/zan-dialog'
  import LoginUtil from '../util/login-util'
  import Util from '../util/util'
  import LoadMore from '../components/kaiui/loadmore/index'
  import Loading from '../components/loading/loading2'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页',
      enablePullDownRefresh: true,
      onReachBottomDistance: 1
    }

    components = {
      single: Single,
      zanDialog,
      loadmore: LoadMore,
      loading: Loading
    }

    data = {
        dataList: [
        ],
        userInfo: {
          code: {},
          user: {}
        },
        page: {
          pageIndex: 1,
          pageSize: 5,
          totalPage: 1
        },
        noData: false,
        load:true,
        isError: false,
        more: {
          type: true,
          loading: '加载中',
          loaded: '我们是有底线的'
        }
    }

    methods = {
    }

    /**
     * 下拉刷新触发方法
     */
    onPullDownRefresh() {
      console.log("下拉刷新")

      if (this.page.pageIndex > this.page.totalPage) {
        wx.showToast({title:"帅哥美女库存已空，来推荐几个吧", icon: "none"})
        wx.stopPullDownRefresh();
      }else {
        Util.commonRequest(this.$parent.globalData.backUrl + "user/queryByPage", this.page, false, this.$parent)
          .then(res => this.topLoadData(res)).catch(error => {
             wx.stopPullDownRefresh();
             Util.processErrorMessage(error, this, false);
        })
      }
    }

    /**
     * 上拉刷新触发方法
     */
    onReachBottom() {
      console.log("上拉刷新")
      if (this.page.pageIndex > this.page.totalPage) {
        this.more.type = false;
      }else {
        Util.commonRequest(this.$parent.globalData.backUrl + "user/queryByPage", this.page, false, this.$parent)
          .then(res => this.downLoadData(res)).catch(error => Util.processErrorMessage(error, this, false))
      }
    }

    /**
     * 处理请求过来的列表数据
     * @param data 来自服务器的列表数据
     */
    loadData(data) {
      this.isError = false;
      this.dataList = this.processData(data.dataList);
      this.page.pageIndex += 1;
      this.page.totalPage = data.totalPage;
      this.$apply();
    }

    /**
     * 对列表数据进行可视化处理
     * @param dataList
     * @returns {*}
     */
    processData(dataList) {
      let _this = this;
      let result = dataList.map(item => {
        return {
          openId: item.openId,
          photos: _this.processImageUrl(item.photos),
          department: item.department,
          jiguan: `${item.province} ${item.city}`,
          name: item.name,
          birthday: item.birthday.substring(2,4),
          sex: item.sex,
          constellation: _this.$parent.globalData.constellationList[item.constellation],
          path: `/pages/user_info?openId=${item.openId}`
        }
      })
      return result;
    }

    /**
     * 处理图片链接
     * 因为服务器返回的图片集合是Json字符串 所以需要把字符串转换为数组 并且拼接好图片服务器地址
     * @param photoListStr
     * @returns {*}
     */
    processImageUrl(photoListStr) {
      let imageUrl = this.$parent.globalData.imageUrl;
      let result = JSON.parse(photoListStr).map(item => `${imageUrl}${item}`)
      return result;
    }

    /**
     * 处理上拉刷新的请求数据
     * 上拉刷新需要把数据放到列表的前面
     * @param data
     */
    topLoadData(data) {
      console.log("上拉刷新请求到的数据：", data);
      wx.stopPullDownRefresh();
      this.dataList.unshift(this.processData(data.dataList));
      this.page.pageIndex += 1;
      this.page.totalPage = data.totalPage;
      this.$apply();
    }

    /**
     * 处理下拉刷新的请求数据
     * @param data
     */
    downLoadData(data) {
      console.log("下拉刷新请求到的数据：", data);
      this.dataList.push(this.processData(data.dataList));
      this.page.pageIndex += 1;
      this.page.totalPage = data.totalPage;
      this.$apply();
    }

    onShow() {
      if (this.isError) {
        this.initLoad();
      }
    }

    initLoad() {
      // wx.hideTabBar();
      // this.$parent.showCustomLoading("加载中...");
      this.$invoke("loading", "showLoading");
      // 初始处理链
      // 1.先登录获取三方登录态并保存到本地缓存中
      // 2.登录后开始获取用户信息 其实主要是第一次获取用户信息授权用 然后保存到本地缓存
      // 3.然后请求第一页数据
      // 最后对上述处理中出现异常做异常处理 主要还是处理服务器连接失败问题
        Util.commonRequest(this.$parent.globalData.backUrl + "user/queryByPage", this.page, false, this.$parent)
          .then(res => {
          console.log("成功获得信息:", res)
          this.$invoke("loading", "hideMask");
          this.loadData(res)
        })
        .catch(error => {
          this.isError = true;
          console.log(error);
          Util.processErrorMessage(error, this);
        })
    }


    onLoad() {
      this.initLoad()
    }
  }
</script>
